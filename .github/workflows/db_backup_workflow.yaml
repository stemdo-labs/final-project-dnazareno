name: 'DB Backup'

on:  workflow_dispatch
  # push:
  #   branches: [main]
    
jobs:
  backup:
    name: 'DB Backup'
    runs-on: self-hosted
    env:
      AZCOPY_SPA_APPLICATION_ID: ${{ secrets.CLIENT_ID }}
      AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      AZCOPY_AUTO_LOGIN_TYPE: SPN
      AZCOPY_TENANT_ID: ${{ secrets.TENANT_ID }}

    defaults:
      run:
        shell: bash
# azcopy copy backup-$namedate.tar.gz 'https://${{ vars.STORAGE_ACCOUNT_NAME }}.blob.core.windows.net/${{ vars.AZ_CONTAINER_NAME }}/backup-$namedate.tar.gz' 
    steps:
    - name: Backup
      run: |
        namedate=$(date +'%Y%m%d%H%M%S')
        mysqldump -h ${{ vars.DB_HOST }} -u ${{ vars.DB_USER }} -p${{ secrets.DB_PASSWORD }} ${{ vars.DB_NAME }} > backup.sql
        tar -czvf backup.tar.gz backup.sql
        azcopy login --login-type=SPN --application-id ${{ secrets.CLIENT_ID }}
        

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Upload `.png`s to Azure Blob Storage
    - name: Upload all PNGs to Azure Blob Storage
      id: upload
      uses: github-developer/upload-azure-blob@v1
      with:
        account: stadnazarenodvfinlab
        destination: dbbackup
        source: backup.tar.gz

    # Print out the urls to uploaded files
    - name: Print URLs
      run: echo $URLS # { ["filename":"hulatocat.png","url":"https://octodex.blob.core.windows.net/octocats/hulatocat.png"] }
      env:
        URLS: ${{ steps.upload.outputs.urls }}
