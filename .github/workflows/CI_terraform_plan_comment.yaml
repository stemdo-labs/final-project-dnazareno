name: CI Terraform
on:
  pull_request:
    types: [opened,reopened]
    branches: 
      - 'main'
    paths:
      - 'Terraform/**'

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      TF_VERSION: 1.5.7
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      tf_actions_working_dir: .
      TF_IN_AUTOMATION: true
    runs-on: ubuntu-latest
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Pruebas unitarias
      run: echo "Tests unitarios superados con éxito"

    - name: Pruebas de integracion
      run: echo "Tests de integración superados con éxito"

    - name: Pruebas End to End
      run: echo "Tests End to End superados con éxito"

    - name: Run markdown lint to check README
      run: |
        npm install remark-cli remark-preset-lint-consistent vfile-reporter-json
        npx remark . --use remark-preset-lint-consistent --report vfile-reporter-json
      
    - uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform -chdir=Terraform init

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=Terraform plan -no-color
      continue-on-error: true

    - uses: mshick/add-pr-comment@v2
      with:
        preformatted: true
        message: |
          ${{ steps.plan.outputs.stdout }}
