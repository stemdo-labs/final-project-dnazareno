name: CICD APP DEV
on: # [workflow_dispatch,workflow_call]
   workflow_dispatch:
   push:
     branches: 
       - 'dnazareno'
     paths:
       - 'concert-app/controller/**'
       - 'concert-app/model/**'
       - 'concert-app/view/**'
       - 'concert-app/Dockerfile'
       - 'concert-app/index.php'
       - 'K8s/**'
jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.get_version.outputs.version }} #tag será un output

    steps:
      - name: Pruebas unitarias
        run: echo "Tests unitarios superados con éxito"

      - name: Pruebas de integracion
        run: echo "Tests de integración superados con éxito"

      - name: Pruebas End to End
        run: echo "Tests End to End superados con éxito"

      - name: Run markdown lint to check README
        run: |
          npm install remark-cli remark-preset-lint-consistent vfile-reporter-json
          npx remark . --use remark-preset-lint-consistent --report vfile-reporter-json
          
      - name: Get version from package.json
        id: get_version
        run: | 
          echo "version=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"
          echo $GITHUB_OUTPUT
          

  call-reusable-ci-workflow:
    needs: build
    uses: ./.github/workflows/dockerizacion_workflow.yaml
    with:
      tag: ${{ needs.build.outputs.tag }}
      entorno: dev
    secrets: inherit

  CD-test:
    needs: [build,call-reusable-ci-workflow]
    uses: ./.github/workflows/k8s_kustomize_workflow.yaml
    with:
      tag: ${{ needs.build.outputs.tag }}
      entorno: dev
    secrets: inherit
          
          
